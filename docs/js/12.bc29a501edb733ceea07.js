(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{LtQX:function(e,t,n){"use strict";n.r(t);var a=n("KHd+"),v=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"markdown"},[n("h2",[e._v("Drawer")]),e._v(" "),e._m(0),e._v(" "),n("p",[e._v("Drawer, this component is used to select item in many items, it used full-page panels to interaction normally.")]),e._v(" "),e._m(1),e._v(" "),n("h3",[e._v("Demo")]),e._v(" "),n("ul",[e._m(2),e._v(" "),n("li",[n("p",[e._v("Custom usage")]),e._v(" "),n("p",[e._v("You can use slots to define your own HTML structure.")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-drawer\n  ref="drawer"\n  :data="data"\n  :selected-index="selectedIndex"\n  @change="changeHandler"\n  @select="selectHandler"\n  @cancel="cancelHandler">\n  <span slot="title">'+e._s(e.province.text)+'</span>\n  <cube-drawer-panel\n    v-for="(panel, index) in data"\n    :key="index"\n    :index="index"\n    :data="panel"\n  >\n    <cube-drawer-item v-for="(item, i) in panel" :item="item" :key="i" :index="i">\n      <i class="cubeic-round-border"></i>\n      <span>'+e._s(e.item.text)+"</span>\n    </cube-drawer-item>\n  </cube-drawer-panel>\n</cube-drawer>\n")])]),e._v(" "),e._m(3),e._v(" "),e._m(4)])]),e._v(" "),n("h3",[e._v("Props")]),e._v(" "),n("h4",[e._v("CubeDrawer")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),n("h4",[e._v("CubeDrawerPanel")]),e._v(" "),e._m(7),e._v(" "),n("h4",[e._v("CubeDrawerItem")]),e._v(" "),e._m(8),e._v(" "),n("h3",[e._v("Events")]),e._v(" "),e._m(9),e._v(" "),n("h3",[e._v("Instance methods")]),e._v(" "),e._m(10)])},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("p",[e._v("New in 1.7.0+")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("Notice:")]),e._v(" Drawer component's container element should be be a relative or absolute position element.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Default usage")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-button @click="showDrawer">Show Drawer</cube-button>\n<cube-drawer\n  ref="drawer"\n  title="请选择"\n  :data="data"\n  :selected-index="selectedIndex"\n  @change="changeHandler"\n  @select="selectHandler"\n  @cancel="cancelHandler"></cube-drawer>\n')])]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("import { provinceList, cityList, areaList } from '../../data/area'\nexport default {\n  data() {\n    return {\n      selectedIndex: [],\n      data: [\n        provinceList,\n        [],\n        []\n      ]\n    }\n  },\n  methods: {\n    showDrawer() {\n      this.$refs.drawer.show()\n    },\n    changeHandler(index, item, selectedVal, selectedIndex, selectedText) {\n      // fake request\n      setTimeout(() => {\n        let data\n        if (index === 0) {\n          // procince change, get city data\n          data = cityList[item.value]\n        } else {\n          // city change, get area data\n          data = areaList[item.value]\n        }\n        // refill panel(index + 1) data\n        this.$refs.drawer.refill(index + 1, data)\n      }, 200)\n    },\n    selectHandler(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandler() {\n      console.log('cancel')\n    }\n  }\n}\n")])]),e._v(" "),n("p",[n("code",[e._v("title")]),e._v(" is the drawer's title, optional; "),n("code",[e._v("data")]),e._v(" source, an array with array items; "),n("code",[e._v("selected-index")]),e._v(" is the initial index of the selected value; "),n("code",[e._v("change")]),e._v("、"),n("code",[e._v("select")]),e._v("、"),n("code",[e._v("cancel")]),e._v(" are events: when selected item changed (the selected item is not in the last Panel)、when selected one item (the item is in the last Panel)、cancel (when clicked the left empty area).")]),e._v(" "),n("p",[e._v("You can use Drawer's "),n("code",[e._v("fill")]),e._v(" method to update next Panel's data.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",[n("code",{staticClass:"language-js"},[e._v("import { provinceList, cityList, areaList } from '../../data/area'\nexport default {\n  data() {\n    return {\n      province: {},\n      selectedIndex: [],\n      data: [\n        [],\n        []\n      ]\n    }\n  },\n  methods: {\n    showDrawer() {\n      // get radom province\n      const randomIndex = Math.round(Math.random() * provinceList.length)\n      const randomProvince = provinceList[randomIndex]\n      this.province = randomProvince\n      this.$refs.drawer.refill(0, cityList[randomProvince.value])\n      this.$refs.drawer.show()\n    },\n    changeHandler(index, item, selectedVal, selectedIndex, selectedText) {\n      setTimeout(() => {\n        // city change, get area data\n        const data = areaList[item.value]\n        this.$refs.drawer.refill(index + 1, data)\n      }, 200)\n    },\n    selectHandler(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandler() {\n      console.log('cancel')\n    }\n  }\n}\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("You can use "),n("code",[e._v("cube-drawer-panel")]),e._v(" and "),n("code",[e._v("cube-drawer-item")]),e._v(" in "),n("code",[e._v("cube-drawer")]),e._v(".")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Attribute")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Type")]),e._v(" "),n("th",[e._v("Accepted Values")]),e._v(" "),n("th",[e._v("Default")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("title")]),e._v(" "),n("td",[e._v("title")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("''")])]),e._v(" "),n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("data source")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("selectedIndex")]),e._v(" "),n("td",[e._v("initial selected index")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("visible<sup>1.8.1</sup>")]),e._v(" "),n("td",[e._v("whether visible. Bind to "),n("code",[e._v("v-model")])]),e._v(" "),n("td",[e._v("Boolean")]),e._v(" "),n("td",[e._v("true/false")]),e._v(" "),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[n("code",[e._v("data")]),e._v(" sub configuration")]),e._v(" "),n("p",[e._v("It is an array and it's items is Array too, eg:")]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("[\n  [\n    {\n      text: 'text',\n      value: 'value'\n    },\n    ...\n  ],\n  [\n    'text',\n    'text2',\n    ...\n  ]\n]\n")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Attribute")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Type")]),e._v(" "),n("th",[e._v("Accepted Values")]),e._v(" "),n("th",[e._v("Default")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("data source")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("[]")])]),e._v(" "),n("tr",[n("td",[e._v("index")]),e._v(" "),n("td",[e._v("the data source index in CubeDrawer's data")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-1")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Attribute")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Type")]),e._v(" "),n("th",[e._v("Accepted Values")]),e._v(" "),n("th",[e._v("Default")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("item data")]),e._v(" "),n("td",[e._v("String/Object")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("''")])]),e._v(" "),n("tr",[n("td",[e._v("index")]),e._v(" "),n("td",[e._v("the item index in CubeDrawerPanel's data")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-1")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Event Name")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Parameters 1")]),e._v(" "),n("th",[e._v("Parameters 2")]),e._v(" "),n("th",[e._v("Parameters 3")]),e._v(" "),n("th",[e._v("Parameters 4")]),e._v(" "),n("th",[e._v("Parameters 5")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("change")]),e._v(" "),n("td",[e._v("when selected item changed (the selected item is not in the last Panel)")]),e._v(" "),n("td",[e._v("current Panel index")]),e._v(" "),n("td",[e._v("changed item")]),e._v(" "),n("td",[e._v("selectedVal: Array, selected item values of each panels")]),e._v(" "),n("td",[e._v("selectedIndex: Array, selected indexes of each panels")]),e._v(" "),n("td",[e._v("selectedText: Array, texts of each columns in current selected item")])]),e._v(" "),n("tr",[n("td",[e._v("select")]),e._v(" "),n("td",[e._v("when selected one item (the item is in the last Panel)")]),e._v(" "),n("td",[e._v("selectedVal: Array, selected item values of each panels")]),e._v(" "),n("td",[e._v("selectedIndex: Array, selected indexes of each panels")]),e._v(" "),n("td",[e._v("selectedText: Array, texts of each columns in current selected item")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("cancel")]),e._v(" "),n("td",[e._v("when clicked the left empty area")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Method name")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Parameters 1")]),e._v(" "),n("th",[e._v("Parameters 2")]),e._v(" "),n("th",[e._v("Parameters 3")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("refill")]),e._v(" "),n("td",[e._v("refill data, change one Panel's data source")]),e._v(" "),n("td",[e._v("the Panel index")]),e._v(" "),n("td",[e._v("the data source")]),e._v(" "),n("td",[e._v("default selected index (Optional, recommended do not specify a value)")])]),e._v(" "),n("tr",[n("td",[e._v("show")]),e._v(" "),n("td",[e._v("show")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("hide")]),e._v(" "),n("td",[e._v("hide")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])])])])}],!1,null,null,null);t.default=v.exports}}]);