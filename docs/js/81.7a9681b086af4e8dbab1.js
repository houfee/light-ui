(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{"7t0j":function(n,t,e){"use strict";e.r(t);var i=e("KHd+"),v=Object(i.a)({},function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"markdown"},[e("h2",[n._v("Swipe 滑块组件")]),n._v(" "),e("blockquote",[e("p",[n._v("1.5.0 新增")])]),n._v(" "),e("p",[n._v("滑块组件，提供类似微信列表左滑功能，可以方便地对列表项做一些功能操作。")]),n._v(" "),e("h3",[n._v("示例")]),n._v(" "),e("p",[e("code",[n._v("Swipe")]),n._v(" 组件的示例相关代码在"),e("a",{attrs:{href:"https://github.com/didi/cube-ui/tree/master/example/pages/swipe"}},[n._v("这里")])]),n._v(" "),e("ul",[e("li",[e("p",[n._v("基本使用")]),n._v(" "),e("p",[e("code",[n._v("Swipe")]),n._v(" 组件常见的场景是搭配 "),e("code",[n._v("Scroll")]),n._v(" 组件使用，既可以纵向滚动，又可以横向左滑出一些按钮对列表项做操作，当然，"),e("code",[n._v("Swipe")]),n._v(" 组件也可以单独使用。")]),n._v(" "),e("pre",[e("code",{staticClass:"language-html"},[n._v('<template>\n <div class="swipe-wrapper">\n    <cube-scroll>\n      <cube-swipe\n          @item-click="onItemClick"\n          @btn-click="onBtnClick"\n          :data="swipeData">\n      </cube-swipe>\n    </cube-scroll>\n  </div>\n</template>\n')])]),n._v(" "),e("pre",[e("code",{staticClass:"language-js"},[n._v("export default {\n  data() {\n    return {\n      swipeData: [{\n        item: {\n          text: '测试1',\n          value: 1\n        },\n        btns: [\n          {\n            action: 'clear',\n            text: '不再关注',\n            color: '#c8c7cd'\n          },\n          {\n            action: 'delete',\n            text: '删除',\n            color: '#ff3a32'\n          }\n        ]\n      }, {\n        item: {\n          text: '测试2',\n          value: 2\n        },\n        btns: [\n          {\n            action: 'clear',\n            text: '不再关注',\n            color: '#c8c7cd'\n          },\n          {\n            action: 'delete',\n            text: '删除',\n            color: '#ff3a32'\n          }\n        ]\n      }, {\n        item: {\n          text: '测试3',\n          value: 3\n        },\n        btns: [\n          {\n            action: 'clear',\n            text: '不再关注',\n            color: '#c8c7cd'\n          },\n          {\n            action: 'delete',\n            text: '删除',\n            color: '#ff3a32'\n          }\n        ]\n      }]\n    }\n  },\n  methods: {\n    onItemClick(item) {\n      console.log('click item:', item)\n    },\n    onBtnClick(btn, index) {\n      if (btn.action === 'delete') {\n        this.$createActionSheet({\n          title: '确认要删除吗',\n          active: 0,\n          data: [\n            {content: '删除'}\n          ],\n          onSelect: () => {\n            this.swipeData.splice(index, 1)\n          }\n        }).show()\n      }\n    }\n  }\n}\n")])]),n._v(" "),e("p",[e("code",[n._v("Swipe")]),n._v(" 组件如果使用默认插槽，则需要传递示例所示的数据结构。")])]),n._v(" "),e("li",[e("p",[n._v("自定义插槽")]),n._v(" "),e("p",[n._v("实际上我们更常见的需求是需要自定义列表的内容展示，因此 "),e("code",[n._v("Swipe")]),n._v(" 组件也支持了插槽的使用方式。")]),n._v(" "),e("p",[n._v("默认插槽可以搭配 "),e("code",[n._v("cube-swipe-item")]),n._v(" 组件实现列表的循环。自定义插槽非常灵活，但它也需要自己手动去写一些逻辑，比如如果你想要在列表删除的时候自定义动画，需要使用 "),e("code",[n._v("transition-group")]),n._v("，需要手动去管理每个激活的 "),e("code",[n._v("swipe-item")]),n._v(" 的收缩，如示例代码所示。")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("1.11 之后")]),n._v(" "),e("pre",[e("code",{staticClass:"language-html"},[n._v('<template>\n  <div class="swipe-wrapper">\n    <cube-scroll>\n      <cube-swipe>\n        <transition-group name="swipe" tag="ul">\n          <li class="swipe-item-wrapper" v-for="(data,index) in swipeData" :key="data.item.id">\n            <cube-swipe-item\n                ref="swipeItem"\n                :btns="data.btns"\n                :index="index"\n                @btn-click="onBtnClick">\n              <div @click="onItemClick(data.item, index)" class="item-inner">\n                <div class="icon">\n                  <img width="60" height="60" :src="data.item.imgurl">\n                </div>\n                <div class="text">\n                  <h2 class="item-name" v-html="data.item.name"></h2>\n                  <p class="item-desc" v-html="data.item.desc"></p>\n                </div>\n              </div>\n            </cube-swipe-item>\n          </li>\n        </transition-group>\n      </cube-swipe>\n    </cube-scroll>\n  </div>\n</template>\n')])]),n._v(" "),e("pre",[e("code",{staticClass:"language-js"},[n._v("export default {\n  data() {\n    return {\n      swipeData: [\n        {\n          item: {\n            id: '3646653877',\n            name: '还不是因为你长得不好看',\n            desc: '伤感：歌词再狠，也抵不过现实伤人',\n            imgurl: 'http://p.qpic.cn/music_cover/MhQ4bJBPt3Yt5icXyBGNhyPJnE9O51CqaN72iaDgvFmDKaia12UFhU5uQ/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n        {\n          item: {\n            id: '1789676645',\n            name: '秋水浮萍任飘渺',\n            desc: '『武侠配乐』快意恩仇江湖情',\n            imgurl: 'http://p.qpic.cn/music_cover/8KfvDey9cibtZ5xkWxRic6vhXgdPic3wnB7reibI4pdPQBCP8u57uqcjsQ/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n        {\n          item: {\n            id: '3649034125',\n            name: '念葳蕊',\n            desc: '江海迦：热恋后哼一首歌为自己悲悯的歌',\n            imgurl: 'http://p.qpic.cn/music_cover/jXFicBvicUcfIWSoCNT1OrbAoHG2fqqnrJVnGV4iaLCapWUpCKqbmAicJg/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n      ]\n    }\n  },\n  methods: {\n    onItemClick(item) {\n      console.log('click item:', item)\n    },\n    onBtnClick(btn, index) {\n      if (btn.action === 'delete') {\n        this.$createActionSheet({\n          title: '确认要删除吗',\n          active: 0,\n          data: [\n            {content: '删除'}\n          ],\n          onSelect: () => {\n            this.swipeData.splice(index, 1)\n          }\n        }).show()\n      } else {\n        this.$refs.swipeItem[index].shrink()\n      }\n    }\n  }\n}\n")])])]),n._v(" "),e("li",[e("p",[n._v("1.11 之前")]),n._v(" "),e("p",[n._v("需要自己手工处理 CubeSwipeItem 的 "),e("code",[n._v("active")]),n._v(" 事件逻辑 "),e("code",[n._v("onItemActive")]),n._v(" 中。")]),n._v(" "),e("pre",[e("code",{staticClass:"language-html"},[n._v('<template>\n  <div class="swipe-wrapper">\n    <cube-scroll>\n      <cube-swipe>\n        <transition-group name="swipe" tag="ul">\n          <li class="swipe-item-wrapper" v-for="(data,index) in swipeData" :key="data.item.id">\n            <cube-swipe-item\n                ref="swipeItem"\n                :btns="data.btns"\n                :index="index"\n                @btn-click="onBtnClick"\n                @active="onItemActive">\n              <div @click="onItemClick(data.item, index)" class="item-inner">\n                <div class="icon">\n                  <img width="60" height="60" :src="data.item.imgurl">\n                </div>\n                <div class="text">\n                  <h2 class="item-name" v-html="data.item.name"></h2>\n                  <p class="item-desc" v-html="data.item.desc"></p>\n                </div>\n              </div>\n            </cube-swipe-item>\n          </li>\n        </transition-group>\n      </cube-swipe>\n    </cube-scroll>\n  </div>\n</template>\n')])]),n._v(" "),e("pre",[e("code",{staticClass:"language-js"},[n._v("export default {\n  data() {\n    return {\n      swipeData: [\n        {\n          item: {\n            id: '3646653877',\n            name: '还不是因为你长得不好看',\n            desc: '伤感：歌词再狠，也抵不过现实伤人',\n            imgurl: 'http://p.qpic.cn/music_cover/MhQ4bJBPt3Yt5icXyBGNhyPJnE9O51CqaN72iaDgvFmDKaia12UFhU5uQ/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n        {\n          item: {\n            id: '1789676645',\n            name: '秋水浮萍任飘渺',\n            desc: '『武侠配乐』快意恩仇江湖情',\n            imgurl: 'http://p.qpic.cn/music_cover/8KfvDey9cibtZ5xkWxRic6vhXgdPic3wnB7reibI4pdPQBCP8u57uqcjsQ/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n        {\n          item: {\n            id: '3649034125',\n            name: '念葳蕊',\n            desc: '江海迦：热恋后哼一首歌为自己悲悯的歌',\n            imgurl: 'http://p.qpic.cn/music_cover/jXFicBvicUcfIWSoCNT1OrbAoHG2fqqnrJVnGV4iaLCapWUpCKqbmAicJg/600?n=1'\n          },\n          btns: [\n            {\n              action: 'clear',\n              text: '不再关注',\n              color: '#c8c7cd'\n            },\n            {\n              action: 'delete',\n              text: '删除',\n              color: '#ff3a32'\n            }\n          ]\n        },\n      ]\n    }\n  },\n  created() {\n    this.activeIndex = -1\n  },\n  methods: {\n    onItemClick(item) {\n      console.log('click item:', item)\n    },\n    onBtnClick(btn, index) {\n      if (btn.action === 'delete') {\n        this.$createActionSheet({\n          title: '确认要删除吗',\n          active: 0,\n          data: [\n            {content: '删除'}\n          ],\n          onSelect: () => {\n            this.swipeData.splice(index, 1)\n          }\n        }).show()\n      } else {\n        this.$refs.swipeItem[index].shrink()\n      }\n    },\n    onItemActive(index) {\n      if (index === this.activeIndex) {\n        return\n      }\n      if (this.activeIndex !== -1) {\n        const activeItem = this.$refs.swipeItem[this.activeIndex]\n        activeItem.shrink()\n      }\n      this.activeIndex = index\n    }\n  }\n}\n")])])])])])]),n._v(" "),e("h3",[n._v("Props 配置")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("cube-swipe")]),n._v(" 配置")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("参数")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("类型")]),n._v(" "),e("th",[n._v("可选值")]),n._v(" "),e("th",[n._v("默认值")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("data")]),n._v(" "),e("td",[n._v("用于 "),e("code",[n._v("swipe")]),n._v(" 列表渲染的数据，当需要使用内置的默认插槽，此参数必传，数组的每一项是一个 Object 类型，包括 "),e("code",[n._v("item")]),n._v(" 和 "),e("code",[n._v("btns")]),n._v("，这俩参数见 "),e("code",[n._v("cube-swipe-item")]),n._v(" 的描述。如果使用自定义插槽，可不传此值。")]),n._v(" "),e("td",[n._v("Array")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("[]")])]),n._v(" "),e("tr",[e("td",[n._v("autoShrink")]),n._v(" "),e("td",[n._v("用于当点击滑块的按钮后，是否需要自动收缩滑块，如果使用自定义插槽，则直接给 "),e("code",[n._v("cube-swipe-item")]),n._v(" 传递此值即可。")]),n._v(" "),e("td",[n._v("Boolean")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("false")])])])]),n._v(" "),e("ul",[e("li",[e("code",[n._v("cube-swipe-item")]),n._v(" 配置")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("参数")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("类型")]),n._v(" "),e("th",[n._v("可选值")]),n._v(" "),e("th",[n._v("默认值")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("item")]),n._v(" "),e("td",[n._v("用于 "),e("code",[n._v("swipe-item")]),n._v(" 列表项渲染的数据，当需要使用内置的默认插槽，此参数必传，且需要有 "),e("code",[n._v("value")]),n._v(" 和 "),e("code",[n._v("text")]),n._v(" 2 个字段，分别表示数据项的值和显示的文案，但如果使用自定义插槽，可不传此值。")]),n._v(" "),e("td",[n._v("Object")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("{}")])]),n._v(" "),e("tr",[e("td",[n._v("btns")]),n._v(" "),e("td",[n._v("用于 "),e("code",[n._v("swipe-item")]),n._v(" 列表项渲染按钮数组，数组的每一项是一个 Object 类型，至少要包含 "),e("code",[n._v("text")]),n._v(" 和 "),e("code",[n._v("color")]),n._v(" 2 个字段，分别表示按钮的文案和颜色。")]),n._v(" "),e("td",[n._v("Array")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("[]")])]),n._v(" "),e("tr",[e("td",[n._v("index")]),n._v(" "),e("td",[n._v("表示当前的 "),e("code",[n._v("swpie-item")]),n._v(" 在整个列表中的索引值，必传。")]),n._v(" "),e("td",[n._v("Number")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("-1")])]),n._v(" "),e("tr",[e("td",[n._v("autoShrink")]),n._v(" "),e("td",[n._v("用于当点击滑块的按钮后，是否需要自动收缩滑块。")]),n._v(" "),e("td",[n._v("Boolean")]),n._v(" "),e("td",[n._v("-")]),n._v(" "),e("td",[n._v("false")])])])]),n._v(" "),e("h3",[n._v("事件")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("cube-swipe")]),n._v(" 事件")])]),n._v(" "),e("p",[n._v("当使用自定义插槽时，直接监听 "),e("code",[n._v("cube-swipe-item")]),n._v(" 上的事件即可。")]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("事件名")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("参数1")]),n._v(" "),e("th",[n._v("参数2")]),n._v(" "),e("th",[n._v("参数3")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("item-click")]),n._v(" "),e("td",[n._v("当列表项目被点击时派发")]),n._v(" "),e("td",[n._v("点击的列表项")]),n._v(" "),e("td",[n._v("点击项在列表中的索引")]),n._v(" "),e("td",[n._v("-")])]),n._v(" "),e("tr",[e("td",[n._v("btn-click")]),n._v(" "),e("td",[n._v("当按钮被点击时派发")]),n._v(" "),e("td",[n._v("点击的按钮")]),n._v(" "),e("td",[n._v("点击按钮在列表中的索引")]),n._v(" "),e("td",[n._v("列表项<sup>1.9.7</sup>")])])])]),n._v(" "),e("ul",[e("li",[e("code",[n._v("cube-swipe-item")]),n._v(" 事件")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("事件名")]),n._v(" "),e("th",[n._v("说明")]),n._v(" "),e("th",[n._v("参数1")]),n._v(" "),e("th",[n._v("参数2")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("item-click")]),n._v(" "),e("td",[n._v("当列表项目被点击时派发")]),n._v(" "),e("td",[n._v("点击的列表项")]),n._v(" "),e("td",[n._v("点击项在列表中的索引")])]),n._v(" "),e("tr",[e("td",[n._v("btn-click")]),n._v(" "),e("td",[n._v("当按钮被点击时派发")]),n._v(" "),e("td",[n._v("点击的按钮")]),n._v(" "),e("td",[n._v("点击按钮在列表中的索引")])]),n._v(" "),e("tr",[e("td",[n._v("active")]),n._v(" "),e("td",[n._v("当开始滑动某个列表项目时派发")]),n._v(" "),e("td",[n._v("激活项在列表中的索引")]),n._v(" "),e("td",[n._v("-")])])])]),n._v(" "),e("h3",[n._v("实例方法")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("cube-swipe-item")]),n._v(" 实例方法")])]),n._v(" "),e("table",[e("thead",[e("tr",[e("th",[n._v("方法名")]),n._v(" "),e("th",[n._v("说明")])])]),n._v(" "),e("tbody",[e("tr",[e("td",[n._v("shrink")]),n._v(" "),e("td",[n._v("收缩该滑块项")])])])])])}],!1,null,null,null);t.default=v.exports}}]);