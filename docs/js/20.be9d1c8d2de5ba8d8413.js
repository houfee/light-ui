(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{q6F0:function(e,t,n){"use strict";n.r(t);var v=n("KHd+"),c=Object(v.a)({},function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"markdown"},[n("h2",[e._v("Picker")]),e._v(" "),n("p",[n("code",[e._v("Picker")]),e._v(" could use to implementing single or multi-column picker.")]),e._v(" "),n("p",[n("strong",[e._v("Notice:")]),e._v(" Cause this component used create-api, so you should have basically knowledge of "),n("a",{attrs:{href:"#/en-US/docs/create-api"}},[e._v("create-api")]),e._v(" first.")]),e._v(" "),n("h3",[e._v("Example")]),e._v(" "),n("p",[e._v("As for Picker, the most important thing is how to define the options. The property "),n("code",[e._v("data")]),e._v(" is used to define options. It's a two-dimensional array, the first dimensional means which columns the picker has, while the second dimensional represent the options of each column.")]),e._v(" "),n("h4",[e._v("1) Single-column Picker")]),e._v(" "),n("p",[e._v("firstly, there is an example of Single-column Picker:")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-button @click="showPicker">Picker</cube-button>\n')])]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\n\nexport default {\n  methods: {\n    showPicker() {\n      if (!this.picker) {\n        this.picker = this.$createPicker({\n          title: 'Picker',\n          data: [column1],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.picker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),n("h4",[e._v("2) Multi-column Picker")]),e._v(" "),n("p",[e._v("You can genarate Multi-column Picker by input the data of several columns. For example, here is a three-colunms picker:")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-button @click="showMutiPicker">Multi-column Picker</cube-button>\n')])]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\nconst column2 = [{ text: '输出', value: '输出' }, { text: '控制', value: '控制' },\n  { text: '核心', value: '核心'}, { text: '爆发', value: '爆发' }]\nconst column3 =  [{ text: '梅肯', value: '梅肯'}, { text: '秘法鞋', value: '秘法鞋' },\n  { text: '假腿', value: '假腿' }, { text: '飞鞋', value: '飞鞋' }]\n\nexport default {\n  methods: {\n    showMutiPicker() {\n      if (!this.mutiPicker) {\n        this.mutiPicker = this.$createPicker({\n          title: 'Multi-column Picker',\n          data: [column1, column2, column3],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.mutiPicker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),n("h4",[e._v("3) Alias for the sub properties of option")]),e._v(" "),n("p",[e._v("Sometimes, you may want to use alias to config the value and text of options, instead of "),n("code",[e._v("value")]),e._v(" and "),n("code",[e._v("text")]),e._v(". Think about this, when the name origin data is "),n("code",[e._v("id")]),e._v(" and "),n("code",[e._v("name")]),e._v(", you could use "),n("code",[e._v("id")]),e._v(" 和 "),n("code",[e._v("name")]),e._v(" to define value and text directly by using property "),n("code",[e._v("alias")]),e._v(" to config the alias of "),n("code",[e._v("value")]),e._v(" as "),n("code",[e._v("id")]),e._v(", "),n("code",[e._v("text")]),e._v(" as "),n("code",[e._v("name")]),e._v(".")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-button @click="showAliasPicker">Use Alias</cube-button>\n')])]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("export default {\n  methods: {\n    showAliasPicker() {\n      if (!this.aliasPicker) {\n        this.aliasPicker = this.$createPicker({\n          title: 'Use Alias',\n          data: [[{ id: 1, name: 'A' }, { id: 2, name: 'B' }, { id: 3, name: 'C' }]],\n          alias: {\n            value: 'id',\n            text: 'name'\n          },\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.aliasPicker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),n("h4",[e._v("4) Method "),n("code",[e._v("$updateProps")])]),e._v(" "),n("p",[e._v("When you need to change some properties of Picker, you could use the method "),n("code",[e._v("$updateProps")]),e._v(" to input the new properties.")]),e._v(" "),n("pre",[n("code",{staticClass:"language-html"},[e._v('<cube-button @click="showUpdatePropsPicker">Use $updateProps</cube-button>\n')])]),e._v(" "),n("pre",[n("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\nconst column2 = [{ text: '输出', value: '输出' }, { text: '控制', value: '控制' },\n  { text: '核心', value: '核心'}, { text: '爆发', value: '爆发' }]\nconst column3 =  [{ text: '梅肯', value: '梅肯'}, { text: '秘法鞋', value: '秘法鞋' },\n  { text: '假腿', value: '假腿' }, { text: '飞鞋', value: '飞鞋' }]\n\nexport default {\n  methods: {\n    showUpdatePropsPicker() {\n      if (!this.updatePropsPicker) {\n        this.updatePropsPicker = this.$createPicker({\n          title: 'Use $updateProps',\n          data: [column1],\n          selectedIndex: [0],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.updatePropsPicker.show()\n      setTimeout(() => {\n        this.updatePropsPicker.$updateProps({\n          title: 'Updated',\n          data: [column1, column2, column3],\n          selectedIndex: [1, 2, 3]\n        })\n      }, 1000)\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),n("h3",[e._v("Props configuration")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Attribute")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Type")]),e._v(" "),n("th",[e._v("Default")]),e._v(" "),n("th",[e._v("Accepted Values")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("data that passed into picker, whose length determines the columns of picker")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("[]")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("selectedIndex")]),e._v(" "),n("td",[e._v("the index of the selected value, corresponding content will be displayed when picker shows")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("[]")]),e._v(" "),n("td",[e._v("[1]")])]),e._v(" "),n("tr",[n("td",[e._v("title")]),e._v(" "),n("td",[e._v("title")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("''")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("subtitle<sup>1.8.1</sup>")]),e._v(" "),n("td",[e._v("subtitle")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("''")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("cancelTxt")]),e._v(" "),n("td",[e._v("the text of the cancel button")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("'取消'")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("confirmTxt")]),e._v(" "),n("td",[e._v("the text of the confirm button")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("'确定'")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("swipeTime")]),e._v(" "),n("td",[e._v("the duration of the momentum animation when user flicks the wheel of the picker, Unit: ms")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("2500")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("alias")]),e._v(" "),n("td",[e._v("configure the alias of "),n("code",[e._v("value")]),e._v(" and "),n("code",[e._v("text")])]),e._v(" "),n("td",[e._v("Object")]),e._v(" "),n("td",[e._v("{}")]),e._v(" "),n("td",[e._v("{ value: 'id', text: 'name'}")])]),e._v(" "),n("tr",[n("td",[e._v("visible<sup>1.8.1</sup>")]),e._v(" "),n("td",[e._v("whether visible. Bind to "),n("code",[e._v("v-model")])]),e._v(" "),n("td",[e._v("Boolean")]),e._v(" "),n("td",[e._v("true/false")]),e._v(" "),n("td",[e._v("false")])]),e._v(" "),n("tr",[n("td",[e._v("maskClosable<sup>1.9.6</sup>")]),e._v(" "),n("td",[e._v("whether hide the component when clicked the mask layer")]),e._v(" "),n("td",[e._v("Boolean")]),e._v(" "),n("td",[e._v("true/false")]),e._v(" "),n("td",[e._v("true")])]),e._v(" "),n("tr",[n("td",[e._v("zIndex<sup>1.9.6</sup>")]),e._v(" "),n("td",[e._v("the value of the style z-index")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("100")]),e._v(" "),n("td",[e._v("-")])])])]),e._v(" "),n("ul",[n("li",[n("code",[e._v("data")]),e._v(" sub configuration")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Attribute")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Type")]),e._v(" "),n("th",[e._v("Default")]),e._v(" "),n("th",[e._v("Example")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("text")]),e._v(" "),n("td",[e._v("the text displayed in each column of picker")]),e._v(" "),n("td",[e._v("String/Number")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("value")]),e._v(" "),n("td",[e._v("corresponding value of the text displayed in each column of picker")]),e._v(" "),n("td",[e._v("String/Number/Boolean")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])])])]),e._v(" "),n("h3",[e._v("Events")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Event Name")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Parameters 1")]),e._v(" "),n("th",[e._v("Parameters 2")]),e._v(" "),n("th",[e._v("Parameters 3")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("select")]),e._v(" "),n("td",[e._v("triggers when clicking the confirm button")]),e._v(" "),n("td",[e._v("selectedVal: Array, values of each columns in current selected item")]),e._v(" "),n("td",[e._v("selectedIndex: Array, indexes of each columns in current selected item")]),e._v(" "),n("td",[e._v("selectedText: Array, texts of each columns in current selected item")])]),e._v(" "),n("tr",[n("td",[e._v("change")]),e._v(" "),n("td",[e._v("triggers when the roller scrolls")]),e._v(" "),n("td",[e._v("index: Number, index of current scrolling roller")]),e._v(" "),n("td",[e._v("selectedIndex: Number, index of selected item in current column")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("value-change")]),e._v(" "),n("td",[e._v("triggers when confirmed value changes")]),e._v(" "),n("td",[e._v("selectedVal: Array, values of each columns in current confirmed item")]),e._v(" "),n("td",[e._v("selectedIndex: Array, indexes of each columns in current confirmed item")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("cancel")]),e._v(" "),n("td",[e._v("triggers when clicking the cancel button")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td")])])]),e._v(" "),n("h3",[e._v("Instance methods")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Method name")]),e._v(" "),n("th",[e._v("Description")]),e._v(" "),n("th",[e._v("Parameters 1")]),e._v(" "),n("th",[e._v("Parameters 2")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("setData")]),e._v(" "),n("td",[e._v("set options in picker")]),e._v(" "),n("td",[e._v("Array, texts and values of options of each columns of picker")]),e._v(" "),n("td",[e._v("Array, indexes of selected item in each column of picker")])]),e._v(" "),n("tr",[n("td",[e._v("show")]),e._v(" "),n("td",[e._v("show")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("hide")]),e._v(" "),n("td",[e._v("hide")]),e._v(" "),n("td",[e._v("-")]),e._v(" "),n("td",[e._v("-")])])])])])}],!1,null,null,null);t.default=c.exports}}]);