(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{ExkQ:function(e,t,v){"use strict";v.r(t);var _=v("KHd+"),n=Object(_.a)({},function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},[function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("div",{staticClass:"markdown"},[v("h2",[e._v("Picker 选择器")]),e._v(" "),v("p",[v("code",[e._v("Picker")]),e._v(" 组件也就是选择器，可以用于实现单列或多列选项的选择。")]),e._v(" "),v("p",[v("strong",[e._v("注：")]),e._v(" 由于此组件基于 create-api 实现，所以在使用之前，请确保你基本了解过 "),v("a",{attrs:{href:"#/zh-CN/docs/create-api"}},[e._v("create-api")]),e._v(" 的用法。")]),e._v(" "),v("h3",[e._v("示例")]),e._v(" "),v("p",[e._v("对于选择器，最基本的是需要定义它可以选择的选项，定义选项的属性是 "),v("code",[e._v("data")]),e._v(" ，它是一个二维数组，第一维度代表了有多少列，第二维度则代表了每列有哪些选项。")]),e._v(" "),v("h4",[e._v("1）单列选择器")]),e._v(" "),v("p",[e._v("首先，是一个单列选择器的例子：")]),e._v(" "),v("pre",[v("code",{staticClass:"language-html"},[e._v('<cube-button @click="showPicker">Picker</cube-button>\n')])]),e._v(" "),v("pre",[v("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\n\nexport default {\n  methods: {\n    showPicker() {\n      if (!this.picker) {\n        this.picker = this.$createPicker({\n          title: 'Picker',\n          data: [column1],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.picker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),v("h4",[e._v("2）多列选择器")]),e._v(" "),v("p",[e._v("如果传入了多列数据，则会生成相应的多列选择器。比如以下是一个三列的选择器：")]),e._v(" "),v("pre",[v("code",{staticClass:"language-html"},[e._v('<cube-button @click="showMutiPicker">Multi-column Picker</cube-button>\n')])]),e._v(" "),v("pre",[v("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\nconst column2 = [{ text: '输出', value: '输出' }, { text: '控制', value: '控制' },\n  { text: '核心', value: '核心'}, { text: '爆发', value: '爆发' }]\nconst column3 =  [{ text: '梅肯', value: '梅肯'}, { text: '秘法鞋', value: '秘法鞋' },\n  { text: '假腿', value: '假腿' }, { text: '飞鞋', value: '飞鞋' }]\n\nexport default {\n  methods: {\n    showMutiPicker() {\n      if (!this.mutiPicker) {\n        this.mutiPicker = this.$createPicker({\n          title: 'Multi-column Picker',\n          data: [column1, column2, column3],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.mutiPicker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),v("h4",[e._v("3）选项的子属性别名")]),e._v(" "),v("p",[e._v("有时你可能不希望以 "),v("code",[e._v("value")]),e._v(" 和 "),v("code",[e._v("text")]),e._v(" 去定义选项的值和文案，而用别的命名，比如当你的数据来源的命名为 "),v("code",[e._v("id")]),e._v(" 和 "),v("code",[e._v("name")]),e._v(" 时，你可能希望直接用  "),v("code",[e._v("id")]),e._v(" 和 "),v("code",[e._v("name")]),e._v(" 来定义值和文案。这个时候，你可以使用 "),v("code",[e._v("alias")]),e._v(" 属性去配置。比如，配置 "),v("code",[e._v("value")]),e._v(" 的别名为 "),v("code",[e._v("id")]),e._v("，"),v("code",[e._v("text")]),e._v(" 的别名为 "),v("code",[e._v("name")]),e._v("。")]),e._v(" "),v("pre",[v("code",{staticClass:"language-html"},[e._v('<cube-button @click="showAliasPicker">Use Alias</cube-button>\n')])]),e._v(" "),v("pre",[v("code",{staticClass:"language-js"},[e._v("export default {\n  methods: {\n    showAliasPicker() {\n      if (!this.aliasPicker) {\n        this.aliasPicker = this.$createPicker({\n          title: 'Use Alias',\n          data: [[{ id: 1, name: 'A' }, { id: 2, name: 'B' }, { id: 3, name: 'C' }]],\n          alias: {\n            value: 'id',\n            text: 'name'\n          },\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.aliasPicker.show()\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),v("h4",[e._v("4）实例方法 "),v("code",[e._v("$updateProps")])]),e._v(" "),v("p",[e._v("当你需要修改 Picker 某些配置项时，你可以使用实例方法 "),v("code",[e._v("$updateProps")]),e._v("，传入你需要更新的属性。")]),e._v(" "),v("pre",[v("code",{staticClass:"language-html"},[e._v('<cube-button @click="showUpdatePropsPicker">Use $updateProps</cube-button>\n')])]),e._v(" "),v("pre",[v("code",{staticClass:"language-js"},[e._v("const column1 = [{ text: '剧毒', value: '剧毒'}, { text: '蚂蚁', value: '蚂蚁' },\n  { text: '幽鬼', value: '幽鬼' }]\nconst column2 = [{ text: '输出', value: '输出' }, { text: '控制', value: '控制' },\n  { text: '核心', value: '核心'}, { text: '爆发', value: '爆发' }]\nconst column3 =  [{ text: '梅肯', value: '梅肯'}, { text: '秘法鞋', value: '秘法鞋' },\n  { text: '假腿', value: '假腿' }, { text: '飞鞋', value: '飞鞋' }]\n\nexport default {\n  methods: {\n    showUpdatePropsPicker() {\n      if (!this.updatePropsPicker) {\n        this.updatePropsPicker = this.$createPicker({\n          title: 'Use $updateProps',\n          data: [column1],\n          selectedIndex: [0],\n          onSelect: this.selectHandle,\n          onCancel: this.cancelHandle\n        })\n      }\n      this.updatePropsPicker.show()\n      setTimeout(() => {\n        this.updatePropsPicker.$updateProps({\n          title: 'Updated',\n          data: [column1, column2, column3],\n          selectedIndex: [1, 2, 3]\n        })\n      }, 1000)\n    },\n    selectHandle(selectedVal, selectedIndex, selectedText) {\n      this.$createDialog({\n        type: 'warn',\n        content: `Selected Item: <br/> - value: ${selectedVal.join(', ')} <br/> - index: ${selectedIndex.join(', ')} <br/> - text: ${selectedText.join(' ')}`,\n        icon: 'cubeic-alert'\n      }).show()\n    },\n    cancelHandle() {\n      this.$createToast({\n        type: 'correct',\n        txt: 'Picker canceled',\n        time: 1000\n      }).show()\n    }\n  }\n}\n")])]),e._v(" "),v("h3",[e._v("Props 配置")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("参数")]),e._v(" "),v("th",[e._v("说明")]),e._v(" "),v("th",[e._v("类型")]),e._v(" "),v("th",[e._v("默认值")]),e._v(" "),v("th",[e._v("示例")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("data")]),e._v(" "),v("td",[e._v("传入 picker 数据，数组的长度决定了 picker 的列数")]),e._v(" "),v("td",[e._v("Array")]),e._v(" "),v("td",[e._v("[]")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("selectedIndex")]),e._v(" "),v("td",[e._v("被选中的索引值，拉起 picker 后显示这个索引值对应的内容")]),e._v(" "),v("td",[e._v("Array")]),e._v(" "),v("td",[e._v("[]")]),e._v(" "),v("td",[e._v("[1]")])]),e._v(" "),v("tr",[v("td",[e._v("title")]),e._v(" "),v("td",[e._v("标题")]),e._v(" "),v("td",[e._v("String")]),e._v(" "),v("td",[e._v("''")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("subtitle<sup>1.8.1</sup>")]),e._v(" "),v("td",[e._v("副标题")]),e._v(" "),v("td",[e._v("String")]),e._v(" "),v("td",[e._v("''")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("cancelTxt")]),e._v(" "),v("td",[e._v("取消按钮文案")]),e._v(" "),v("td",[e._v("String")]),e._v(" "),v("td",[e._v("'取消'")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("confirmTxt")]),e._v(" "),v("td",[e._v("确定按钮文案")]),e._v(" "),v("td",[e._v("String")]),e._v(" "),v("td",[e._v("'确定'")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("swipeTime")]),e._v(" "),v("td",[e._v("快速滑动 picker 滚轮时，惯性滚动动画的时长，单位：ms")]),e._v(" "),v("td",[e._v("Number")]),e._v(" "),v("td",[e._v("2500")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("alias")]),e._v(" "),v("td",[e._v("配置"),v("code",[e._v("value")]),e._v("和"),v("code",[e._v("text")]),e._v("的别名")]),e._v(" "),v("td",[e._v("Object")]),e._v(" "),v("td",[e._v("{}")]),e._v(" "),v("td",[e._v("{ value: 'id', text: 'name'}")])]),e._v(" "),v("tr",[v("td",[e._v("visible<sup>1.8.1</sup>")]),e._v(" "),v("td",[e._v("显示状态，是否可见。"),v("code",[e._v("v-model")]),e._v("绑定值")]),e._v(" "),v("td",[e._v("Boolean")]),e._v(" "),v("td",[e._v("true/false")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("maskClosable<sup>1.9.6</sup>")]),e._v(" "),v("td",[e._v("点击蒙层是否隐藏")]),e._v(" "),v("td",[e._v("Boolean")]),e._v(" "),v("td",[e._v("true/false")]),e._v(" "),v("td",[e._v("true")])]),e._v(" "),v("tr",[v("td",[e._v("zIndex<sup>1.9.6</sup>")]),e._v(" "),v("td",[e._v("样式 z-index 的值")]),e._v(" "),v("td",[e._v("Number")]),e._v(" "),v("td",[e._v("100")]),e._v(" "),v("td",[e._v("-")])])])]),e._v(" "),v("ul",[v("li",[v("code",[e._v("data")]),e._v("子配置项")])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("参数")]),e._v(" "),v("th",[e._v("说明")]),e._v(" "),v("th",[e._v("类型")]),e._v(" "),v("th",[e._v("默认值")]),e._v(" "),v("th",[e._v("示例")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("text")]),e._v(" "),v("td",[e._v("picker每一列展示的文案")]),e._v(" "),v("td",[e._v("String/Number")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("value")]),e._v(" "),v("td",[e._v("picker每一列展示的每项文案对应的值")]),e._v(" "),v("td",[e._v("String/Number/Boolean")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td",[e._v("-")])])])]),e._v(" "),v("h3",[e._v("事件")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("事件名")]),e._v(" "),v("th",[e._v("说明")]),e._v(" "),v("th",[e._v("参数1")]),e._v(" "),v("th",[e._v("参数2")]),e._v(" "),v("th",[e._v("参数3")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("select")]),e._v(" "),v("td",[e._v("点击确认按钮触发此事件")]),e._v(" "),v("td",[e._v("selectedVal: 当前选中项每一列的值，Array类型")]),e._v(" "),v("td",[e._v("selectedIndex: 当前选中项每一列的索引，Array类型")]),e._v(" "),v("td",[e._v("selectedText: 当前选中项每一列的文案，Array类型")])]),e._v(" "),v("tr",[v("td",[e._v("change")]),e._v(" "),v("td",[e._v("滚轴滚动后触发此事件")]),e._v(" "),v("td",[e._v("index: 当前滚动列次序，Number类型")]),e._v(" "),v("td",[e._v("selectedIndex: 当前列选中项的索引，Number类型")]),e._v(" "),v("td")]),e._v(" "),v("tr",[v("td",[e._v("value-change")]),e._v(" "),v("td",[e._v("所确认的值变化时触发此事件")]),e._v(" "),v("td",[e._v("selectedVal: 当前确认项每一列的值，Array类型")]),e._v(" "),v("td",[e._v("selectedIndex: 当前确认项每一列的索引，Array类型")]),e._v(" "),v("td",[e._v("selectedText: 当前选中项每一列的文案，Array类型")])]),e._v(" "),v("tr",[v("td",[e._v("cancel")]),e._v(" "),v("td",[e._v("点击取消按钮触发此事件")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td")])])]),e._v(" "),v("h3",[e._v("实例方法")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("方法名")]),e._v(" "),v("th",[e._v("说明")]),e._v(" "),v("th",[e._v("参数1")]),e._v(" "),v("th",[e._v("参数2")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("setData")]),e._v(" "),v("td",[e._v("设置picker可选项")]),e._v(" "),v("td",[e._v("picker每列可选项的文案和值，Array类型")]),e._v(" "),v("td",[e._v("picker每列选中的索引，Array类型")])]),e._v(" "),v("tr",[v("td",[e._v("show")]),e._v(" "),v("td",[e._v("显示")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("hide")]),e._v(" "),v("td",[e._v("隐藏")]),e._v(" "),v("td",[e._v("-")]),e._v(" "),v("td",[e._v("-")])])])])])}],!1,null,null,null);t.default=n.exports}}]);